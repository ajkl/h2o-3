description = "H2O Test Integration - TestNG"

dependencies {
	compile 'net.sf.opencsv:opencsv:2.3'
	compile 'mysql:mysql-connector-java:5.1.16'
    testCompile 'org.testng:testng:6.8'
    compile project(":h2o-core")
    compile project(":h2o-algos")
    testCompile project(path: ":h2o-core", configuration: "testArchives")
    testCompile project(path: ":h2o-algos", configuration: "testArchives")
}

test {
    def singleNode = rootProject.hasProperty("testNGSingleNode")
    def multipleNode = rootProject.hasProperty("testNGMultiNode")
    enabled = singleNode || multipleNode

    if (multipleNode) { jvmArgs('-ea',"-Xmx${testNGXmx}", "-Xms${testNGXmx}") }

    useTestNG{
        useDefaultListeners = true

        if(rootProject.hasProperty("algorithm")){
            systemProperty 'algorithm', "$algorithm"
        }
        if(rootProject.hasProperty("testcaseId")){
        	systemProperty 'testcaseId', "$testcaseId"
        }
	    if(rootProject.hasProperty("dbConfigFilePath")){
	    	systemProperty 'dbConfigFilePath', "$dbConfigFilePath"
	    }
        if(rootProject.hasProperty("stdOutToFile")){
            systemProperty 'stdOutToFile', "$stdOutToFile"
        }
        
        if (singleNode) { suites("src/test/resources/singleNode.xml") }
        else { suites("src/test/resources/multipleNode.xml") }
    }
    
    testLogging.setShowStandardStreams(true)

    reports {
        html.enabled = false
        junitXml.outputPerTestCase = true
    }
}

//task accuracySuiteSummary(type: Exec) {
//    commandLine 'python', 'scripts/update_testng_report.py', '-d', 'results/'
//}

//test.finalizedBy(accuracySuiteSummary)
